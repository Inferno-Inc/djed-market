'use strict';

var _ = require( 'lodash' );
var View = require( 'djed/interface/view/View' );

var familyMembersTpl = _.template( '<div class="product-tooltip-wrapper family-members-wrapper">' +
  '<p><%= content["privacy-example"]["family-members-headline"]%> <span class="product-privacy-family"><%= content["privacy-example"]["family-members"].length %></p>' +
  '<div class="product-tooltip">' +
  '<% _.each(content["privacy-example"]["family-members"], function (member) { %>' +
  '<div class="product-tooltip-family"><img src="<%= member.imagepath %>" class="product-tooltip-avatar"><%= member.name %></div>' +
  '<% }); %>' +
  '</div>' +
  '</div>' );

var closestFamilyTpl = _.template( '<div class="product-tooltip-wrapper <%= wrapperClass %>">' +
  '<p><%= headline %> <span class="product-privacy-family"><%= list.length %></p>' +
  '<div class="product-tooltip">' +
  '<% _.each(list, function (member) { %>' +
  '<p><%= member.name %></p>' +
  '<% }); %>' +
  '</div>' +
  '</div>' );

module.exports = View.extend( {

  initialize: function () {
    this.listenTo( this.model, 'switch', this.switch );
  },

  switch: function () {
    var data = this.model.getActiveContent().toJSON();

    this.$( 'h2' ).text( data[ 'privacy-example' ].headline );
    this.$( '.subhead' ).text( data[ 'privacy-example' ].body );
    this.$( '.privacy-card' ).attr( 'src', data[ 'privacy-example' ][ 'card-imagepath' ] );

    if ( data[ 'privacy-example' ][ "family-members" ] ) {
      var $newFamilyMembers = familyMembersTpl( {
        content: data
      } );
      this.$( '.family-members-wrapper' ).css( 'display', 'block' ).replaceWith( $newFamilyMembers );
    } else {
      this.$( '.family-members-wrapper' ).css( 'display', 'none' );
    }

    if ( data[ 'privacy-example' ][ "closest-family" ] ) {
      var $newClosestFamily = closestFamilyTpl( {
        headline: data[ 'privacy-example' ][ 'closest-family-headline' ],
        list: data['privacy-example']['closest-family'],
        wrapperClass: 'closest-family-wrapper'
      } );
      this.$( '.closest-family-wrapper' ).css( 'display', 'block' ).replaceWith( $newClosestFamily );
    } else {
      this.$( '.closest-family-wrapper' ).css( 'display', 'none' );
    }

    if ( data[ 'privacy-example' ].caregivers ) {
      var $newCaregivers = closestFamilyTpl( {
        headline: 'Caregivers',
        list: data[ 'privacy-example' ].caregivers,
        wrapperClass: 'caregivers-wrapper'
      } );
      this.$( '.caregivers-wrapper' ).css( 'display', 'block' ).replaceWith( $newCaregivers );
    } else {
      this.$( '.caregivers-wrapper' ).css( 'display', 'none' );
    }

  }

} );
